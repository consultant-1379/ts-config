---

## Set multiple parameter values at once ##

definitions:
  ## VIP_OAM: the virtual IP address for OAM traffic
  VIP_OAM: &VIP_OAM ""
  ## VIP_SIG_SCP: the virtual IP address for signaling traffic of SCP
  VIP_SIG_SCP: &VIP_SIG_SCP "{% if sc.scp.enabled %}{{ sc.scp.ip }}{% endif %}"
  VIP_SIG2_SCP: &VIP_SIG2_SCP ""
  ## VIP_SIG_SEPP: the virtual IP address for signaling traffic of SEPP
  VIP_SIG_SEPP: &VIP_SIG_SEPP "{% if sc.sepp.enabled %}{{ sc.sepp.internalNetwork.ip }}{% endif %}"
  VIP_SIG2_SEPP: &VIP_SIG2_SEPP "{% if sc.sepp.enabled %}{{ sc.sepp.externalNetwork.ip }}{% endif %}"
  ## VIP_SIG_BSF: the virtual IP address for signaling traffic of BSF over the http interface
  VIP_SIG_BSF: &VIP_SIG_BSF "{% if sc.bsf.enabled %}{{ sc.bsf.ip }}{% endif %}"
  ## VIP_SIG_Diameter: the virtual IP address for signaling traffic of BSF over the diameter interface
  VIP_SIG_Diameter: &VIP_SIG_Diameter "{% if sc.bsf.enabled %}{{ sc.bsf.diameter.ip }}{% endif %}"
  ## storage class for all OAM state
  oam_storage_class: &oam_storage_class {{ storageClassName|default("network-block") }}
  ## shared VIP label for OAM
  shared_vip_oam_label: &shared_vip_oam_label "sc{{ instance | default("") }}-oam"

global:
  timezone: {{ timezone }}
#  pullSecret: ""
#  registry:
#    url: "armdocker.rnd.ericsson.se"
  externalIPv4:
     enabled: false    ## true or false
  externalIPv6:
     enabled: false    ## true or false
  ipFamilyPolicy: SingleStack  ## SingleStack or PreferDualStack or RequireDualStack
  licensing:
    sites:
    - hostname: "{{ nels.host }}"
      ip: ""
      priority: 10
  ericsson:
    bsf:
      enabled: {{ sc.bsf.enabled | string | lower }}
    nlf:
      enabled: false
    scp:
      enabled: {{ sc.scp.enabled | string | lower }}
    sepp:
      enabled: {{ sc.sepp.enabled | string | lower }}
    rlf:
      {% if sc.sepp.enabled or sc.scp.enabled %}
      enabled: true
      {% else %}
      enabled: false
      {% endif %}
    slf:
      enabled: false
    wcdb:
      enabled: {{ sc.bsf.enabled | string | lower }}
    pvtb:
      enabled: false
    objectStorage: ## ROP File Storage Backend (Alpha Feature)
      enabled: false
    sftp: ## ROP File Storage Backend (Alpha Feature)
      enabled: false
    licensing:
  #    nelsConfiguration:
   #     primary:
    #      hostname: "{{ nels.host }}"
     #     ip: ""
      licenseDomains:
        - productType: "SIGNALING_CONTROLLER" ## DO NOT CHANGE THIS VALUE
          customerId: "{{ license.customerId }}"
          swltId: "{{ license.swltId }}"

## Set application specific parameter values ##
eric-sc:
  routes:
    nbi:
      fqdn: {{ cnom.fqdn }}
      security:
        tls:
          clientValidation:
            enabled: false

{% if sc.scp.enabled %}
eric-scp:
  service:
    worker:
      annotations:
        loadBalancerIPs: *VIP_SIG_SCP
      multiVpn:
        annotations:
          loadBalancerIPs: *VIP_SIG2_SCP
  spec:
    worker:
      replicaCount: {{ replicaCount['eric-scp-worker'] }}
      max_active_tcp_connections: "500"
      concurrency: "2"
      send_goaway_for_premature_rst_streams: "true"
      premature_reset_total_stream_count: "500"
      premature_reset_min_stream_lifetime_seconds: "1"
      max_requests_per_io_cycle: "0"
  certificates:
    traf:
      key: scp-sbi-server-key
      certificate: scp-sbi-server-cert
    nrf:
      key: scp-sbi-client-key
      certificate: scp-sbi-client-cert
  tapagent:
    manager:
      enabled: true
    worker:
      enabled: true

{% endif %}

{% if sc.bsf.enabled %}
eric-bsf:
  service:
    worker:
      annotations:
        loadBalancerIPs: *VIP_SIG_BSF
  spec:
    worker:
      replicaCount: {{ replicaCount['eric-bsf-worker'] }}
  certificates:
    traf:
      key: bsf-sbi-server-key
      certificate: bsf-sbi-server-cert
    nrf:
      key: bsf-sbi-client-key
      certificate: bsf-sbi-client-cert
  tapagent:
    manager:
      enabled: true
    worker:
      enabled: true

eric-bsf-diameter:
  replicaCount: 2
{% endif %}

{% if sc.sepp.enabled %}
eric-sepp:
  service:
    worker:
      annotations:
        loadBalancerIPs: *VIP_SIG_SEPP
      externalTrafficPolicy: Local
      multiVpn:
        enabled: true
        annotations:
          # cloudProviderLB: {}
          loadBalancerIPs: *VIP_SIG2_SEPP
  spec:
    worker:
      replicaCount: {{ replicaCount['eric-sepp-worker'] }}
      max_active_tcp_connections: "500"
      concurrency: "2"
      send_goaway_for_premature_rst_streams: "true"
      premature_reset_total_stream_count: "500"
      premature_reset_min_stream_lifetime_seconds: "1"
      max_requests_per_io_cycle: "0"
  certificates:
    traf:
      asymmetric:
        - key: sc-traf-default-key1-internal
          certificate: sc-traf-default-cert1-internal
        - key: sc-traf-default-key2-external
          certificate: sc-traf-default-cert2-external
      trustedAuthority:
        - caList: ca-certificate-1
    nrf:
      key: sc-nrf-default-key
      certificate: sc-nrf-default-cert
  tapagent:
    manager:
      enabled: true
    worker:
      enabled: true

{% endif %}

eric-sc-nlf:
  replicaCount: 2

eric-sc-rlf:
  spec:
    rlf:
      replicaCount: 2

eric-sc-slf:
  spec:
    slf:
      replicaCount: 2

## ADP microservices parameter values ##

## Distributed Coordinator ED used by SC's Service Producer Registry (SPR) optional functionality
eric-data-distributed-coordinator-ed-sc:
  persistence:
    persistentVolumeClaim:
      storageClassName: *oam_storage_class

{% if sc.bsf.enabled %}
## Diameter
eric-stm-diameter:
  replicaCount: 2
  service:
    loadBalancerIP: *VIP_SIG_Diameter
{% endif %}
## Backup and Restore Orchestrator
eric-ctrl-bro:
  persistence:
    persistentVolumeClaim:
      storageClassName: *oam_storage_class

## LDAP Server
eric-sec-ldap-server:
  persistentVolumeClaim:
    storageClassName: *oam_storage_class

## Ingress Controller CR
eric-tm-ingress-controller-cr:
  service:
    annotations:
      sharedVIPLabel: *shared_vip_oam_label
      addressPoolName: "sc{{ instance | default("") }}-oam"
    loadBalancerIP: *VIP_OAM

## Distributed Coordinator ED
eric-data-distributed-coordinator-ed:
  persistence:
    persistentVolumeClaim:
      storageClassName: *oam_storage_class

## Configuration Management Yang Provider
eric-cm-yang-provider:
  service:
    annotations:
      sharedVIPLabel: *shared_vip_oam_label
      addressPoolName: "sc{{ instance | default("") }}-oam"
    loadBalancerIP: *VIP_OAM
    certificates:
      asymmetricKeyCertificateName: "netconf-default-key-cert"
      trustedCertificateListName: "sc-trusted-default-cas"
  externalTls:
    netconf:
      enabled: false

## Data Coordinator ZK
eric-data-coordinator-zk:
  persistence:
    persistentVolumeClaim:
      storageClassName: *oam_storage_class
  {% if caas == 'OpenShift' %}
  # SCDS-1204
  resources:
    metricsexporter:
      limits:
        memory: "48Mi"
      requests:
        memory: "16Mi"
  {% endif %}

## Document Database PG
eric-data-document-database-pg:
  persistentVolumeClaim:
    storageClassName: *oam_storage_class

## Message Bus KF
eric-data-message-bus-kf:
  persistence:
    persistentVolumeClaim:
      storageClassName: *oam_storage_class

{% if sc.bsf.enabled %}
## Data Wide Column Database CD
eric-data-wide-column-database-cd:
  persistence:
    dataVolume:
      persistentVolumeClaim:
        storageClassName: *oam_storage_class
        size: 120Gi
{% endif %}

## SNMP Alarm Provider
eric-fh-snmp-alarm-provider:
  service:
    annotations:
      sharedVIPLabel: *shared_vip_oam_label
      addressPoolName: "sc{{ instance | default("") }}-oam"
    loadBalancerIP: *VIP_OAM
    secretName: 'snmp-alarm-provider-config'
    sourceIdentifierType: 1
    sourceIdentifier: "{{ snmp.sourceIdentifier }}"

## PM Server
eric-pm-server:
  {% if caas == 'OpenShift' %}
  rbac:
    appMonitoring:
      enabled: false
  {% endif %}
  server:
    persistentVolume:
      storageClass: *oam_storage_class
    retention: "3d"

## Search Engine
eric-data-search-engine:
  autoSetRequiredWorkerNodeSysctl: false
  persistence:
    data:
      persistentVolumeClaim:
        # size: "100Gi"
        storageClassName: *oam_storage_class
    master:
      persistentVolumeClaim:
        # size: "64Mi"
        storageClassName: *oam_storage_class

## PM Bulk Reporter
eric-pm-bulk-reporter:
  persistentVolumeClaim:
    storageClassName: *oam_storage_class
    # size: 10Gi
  service:
    annotations:
      sharedVIPLabel: *shared_vip_oam_label
      addressPoolName: "sc{{ instance | default("") }}-oam"
    loadBalancerIP: *VIP_OAM

## License Manager
eric-lm-combined-server:
  licenseServerClient:
    licenseServer:
      thrift:
        host: "{{ nels.host }}"

## Object Staorage MN
eric-data-object-storage-mn:
  persistentVolumeClaim:
    storageClassName: *oam_storage_class

## SFTP Server
eric-data-sftp-server:
  service:
    annotations:
      sharedVIPLabel: *shared_vip_oam_label
      addressPoolName: "sc{{ instance | default("") }}-oam"
    loadBalancerIP: *VIP_OAM

## Application Sys Info Handler
eric-si-application-sys-info-handler:
  asih:
    applicationId: {{ nodeName }}

{% if caas == 'OpenShift' %}
eric-log-shipper:
  rbac:
    automountServiceAccountToken: true
    createClusterRole: true
    createClusterRoleBinding: true
  logshipper:
    privileged: true
    cfgData: ""
    autodiscover:
      enabled: true
      namespace: ".RELEASE.NAMESPACE"
      logplane: adp-app-logs
      hints:
        enabled: false
      paths:
        - /var/log/pods/${data.kubernetes.namespace}_${data.kubernetes.pod.name}_${data.kubernetes.pod.uid}/**/*.log
      useContainerInput: true
  additionalVolumes: |
    - name: crio-containers
      hostPath:
        path: /var/log/containers
    - name: kubernetes-containers
      hostPath:
        path: /var/log/pods
  additionalVolumeMounts: |
    - name: crio-containers
      mountPath: /var/log/containers
      readOnly: true
    - name: kubernetes-containers
      mountPath: /var/log/pods
      readOnly: true
  {% endif %}
